{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/Todo/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","utils/functions.tsx","index.tsx"],"names":["Status","actions","todo","type","payload","currentTodoReducer","state","action","status","query","filterReducer","All","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoItem","dispatch","id","title","completed","className","classNames","onClick","currentTodoActions","role","TodoList","length","map","TodoFilter","onSubmit","event","preventDefault","value","onChange","selectedStatus","target","filterActions","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","catch","Error","finally","href","email","name","App","todosActions","preparedTodos","string","preparedString","toLocaleLowerCase","trim","preparedQuery","includes","checkQuery","getPreparedTodos","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d795fd6.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET': {\n      return action.payload;\n    }\n\n    case 'currentTodo/REMOVE': {\n      return null;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetStatus = {\n  type: 'filter/SET_STATUS',\n  payload: Status,\n};\n\nconst setStatus = (status: Status): SetStatus => ({\n  type: 'filter/SET_STATUS',\n  payload: status,\n});\n\ntype SetQuery = {\n  type: 'filter/SET_QUERY',\n  payload: string,\n};\n\nconst setQuery = (query: string): SetQuery => ({\n  type: 'filter/SET_QUERY',\n  payload: query,\n});\n\nexport const actions = { setStatus, setQuery };\n\ntype State = { query: string, status: Status };\ntype Action = SetStatus | SetQuery;\n\nconst filterReducer = (\n  state: State = {\n    query: '',\n    status: Status.All,\n  },\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'filter/SET_STATUS': {\n      return {\n        ...state,\n        status: action.payload,\n      };\n    }\n\n    case 'filter/SET_QUERY': {\n      return {\n        ...state,\n        query: action.payload,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = { type: 'todos/SET', payload: Todo[] };\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\ntype Action = SetTodosAction;\n\nconst todosReducer = (\n  state: Todo[] = [],\n  action: Action,\n): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET': {\n      return action.payload;\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable jsx-a11y/interactive-supports-focus */\n/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(store => store.currentTodo);\n\n  const {\n    id, title, completed,\n  } = todo;\n\n  const changeCurrentTodo = () => {\n    if (todo.id === currentTodo?.id) {\n      dispatch(currentTodoActions.removeTodo());\n\n      return;\n    }\n\n    dispatch(currentTodoActions.setTodo(todo));\n  };\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({\n        'has-background-info-light': id === currentTodo?.id,\n      })}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !completed,\n          'has-text-success': completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            changeCurrentTodo();\n          }}\n        >\n          <span\n            role=\"button\"\n            className=\"icon\"\n          >\n            <i className={classNames('far', {\n              'fa-eye': id !== currentTodo?.id,\n              'fa-eye-slash': id === currentTodo?.id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../Todo/TodoItem';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <>\n\n      {todos.length ? (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {todos.map(todo => (\n              <TodoItem\n                todo={todo}\n                key={todo.id}\n              />\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n    </>\n  );\n};\n","import React, { ChangeEvent } from 'react';\nimport { Status } from '../../types/Status';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query, status } = useAppSelector(store => store.filter);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event: ChangeEvent<HTMLSelectElement>) => {\n              const selectedStatus = event.target.value as Status;\n\n              dispatch(filterActions.setStatus(selectedStatus));\n            }}\n          >\n            <option value={Status.All}>{Status.All}</option>\n            <option value={Status.Active}>{Status.Active}</option>\n            <option value={Status.Completed}>{Status.Completed}</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={query}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(event:React.ChangeEvent<HTMLInputElement>) => {\n            dispatch(filterActions.setQuery(event.target.value));\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                dispatch(filterActions.setQuery(''));\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(store => store.currentTodo);\n\n  const [user, setUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    if (currentTodo?.userId) {\n      getUser(currentTodo?.userId)\n        .then(setUser)\n        .catch(() => {\n          throw new Error('Error');\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading\n        ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${currentTodo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  dispatch(currentTodoActions.removeTodo());\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {currentTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {currentTodo?.completed ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n                {' by '}\n                <a href={user?.email}>{user?.name}</a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { getPreparedTodos } from './utils/functions';\nimport { actions as todosActions } from './features/todos';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { todos, currentTodo, filter } = useAppSelector(store => store);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then((res) => {\n        dispatch(todosActions.setTodos(res));\n      })\n      .catch(() => {\n        throw new Error('Error');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const preparedTodos = getPreparedTodos(todos, filter);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (\n                  <Loader />\n                ) : (\n                  <TodoList todos={preparedTodos} />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import { Status } from '../types/Status';\nimport { Todo } from '../types/Todo';\n\nfunction checkQuery(string: string, query: string) {\n  const preparedString = string.toLocaleLowerCase().trim();\n  const preparedQuery = query.toLocaleLowerCase().trim();\n\n  return preparedString.includes(preparedQuery);\n}\n\nexport function getPreparedTodos(\n  todos: Todo[],\n  filter: { query: string, status: Status },\n) {\n  let preparedTodos = [...todos];\n\n  if (filter.status !== Status.All) {\n    switch (filter.status) {\n      case Status.Active: {\n        preparedTodos = preparedTodos.filter(todo => !todo.completed);\n        break;\n      }\n\n      case Status.Completed: {\n        preparedTodos = preparedTodos.filter(todo => todo.completed);\n        break;\n      }\n\n      default: {\n        return preparedTodos;\n      }\n    }\n  }\n\n  if (filter.query) {\n    preparedTodos = preparedTodos.filter(\n      (todo) => checkQuery(todo.title, filter.query),\n    );\n  }\n\n  return preparedTodos;\n}\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}